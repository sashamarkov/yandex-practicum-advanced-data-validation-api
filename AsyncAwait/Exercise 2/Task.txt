Вам предстоит разработать специальную программу скорочтения по технологии Spritz, которая позволяет значительно увеличить количество читаемых слов, выводя текст по одному слову в центре экрана. Для этого вам нужно сделать специальный асинхронный цикл, с уменьшающейся задержкой между выводом слов. Постепенно увеличивая показатель WPM (words per minute, слов в минуту), вы можете достичь скорости 500 слов в минуту и выше.
Для удобной работы с задержками создайте асинхронную функцию delay(milliseconds), а также асинхронную функцию showWord() со spread-аргументом, повторный вызов которой и будет асинхронным циклом. Важно помнить, что нельзя вызывать функцию саму из себя непосредственно, вам нужно использовать таймер. Смена слов включается по нажатию кнопки мыши, а после остановки переменная wpm возвращается в исходное значение
В оригинальном алгоритме Spritz разбивка текстов также автоматизирована, но мы подготовили для вас уже размеченный текст с помощью специальных символов из переменной breaker.

---
Используйте асинхронный синтаксис, так алгоритм расчёта задержки будет наиболее понятен
Задержка должна уменьшаться с каждым словом, следовательно, должен возрастать WPM
Механизм нажатия на левую кнопку мыши уже реализован в переменной isMouseDown

---
index.js

let container = document.querySelector(".container")
let wordElem = document.querySelector(".word")
let wpmElem = document.querySelector(".wpm")

let text = `Александр| Степанович| Попов| внес| значительный| вклад| в развитие| мировой| цивилизации.| 7 мая 1895| года| демонстрацией| на заседании| Физического| отделения| Русского| физико-химического| общества| в Санкт-Петербургском| университете| первой| в мире| системы| беспроводной| телеграфии| А.С. Поповым| был| сделан| первый| шаг| в эпоху| информатизации.| Публикация| в январском| номере| за 1896 год| Журнала РФХО,| имевшего| международную| рассылку,| статьи| «Прибор| для| обнаружения| и регистрирования| электрических| колебаний»| с полным| описанием| элементов| системы| беспроводной| телеграфии| инициировала| разработку| этих| идей| в Европе| и в США.| Этой| публикацией| было| обеспечено| свободное| развитие| идей| радиотехники,| и, независимо| от наличия| у итальянского| изобретателя| Г. Маркони| английского| патента,| позволило| на конкурентной| основе| совершенствовать| аппаратуру,| способствовало| ускорению| развития| радиофизики,| начало| которой| было| положено| работами| Фарадея,| Максвелла| и Герца.| Создание| и публичная| демонстрация| системы| беспроводной| телеграфии,| первоначально| разработанной| для связи| в Военно-Морском| Флоте,| дали| импульс| к зарождению| и развитию| многих| совершенно| новых| для того| времени| научных| направлений,| творческих| идей.| Это радиосвязь,| без которой| был невозможен| прогресс| общества,| начало| радиометеорологии| и радионавигации,| радиоразведки| и радиопротиводействия,| радиоастрономии| и телевидения,| радиовещания.| Современное| состояние| и развитие| систем| телекоммуникаций,| экономический| эффект| их| применения| ярко| свидетельствует| о международном| значении| работ| профессора| А.С. Попова.`
let breaker = '| '
let startWpm = 200;

let isMouseDown = false;

let wpm = ... //начальное значение

document.addEventListener('mousedown', (event) => {
    if (!isMouseDown) {
        isMouseDown = true;
    }
});

document.addEventListener('mouseup', (event) => {
    if (isMouseDown) {
        isMouseDown = false;
    }
});

... pause(msec) { //асинхронный метод паузы в цикле
    ...
}

async function drawWord(wpm, word, ...words) {
    if(isMouseDown){ //отображаем слово по нажатию
        wordElem... 
        await ...
        wpm = Math.min(500, ???)
        setTimeout(() => ...
    } else {
        await pause(333);
        setTimeout(() => ...
    }
    wpmElem.textContent = `${wpm} WPM`
}

document.addEventListener("DOMContentLoaded", async () => {
    let words = text.split(breaker).map(word => word.trim());
    drawWord... //правильный spread-вызов
})